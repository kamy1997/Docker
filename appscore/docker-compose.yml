version: '3.9'

services:
  user.data:
    image: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - user_data

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - rabbitmq_net
    depends_on:
      sql.data:
        condition: service_started
      user.data:
        condition: service_started


  sql.data:
    build:
      context: "./Database"
      dockerfile: Dockerfile
    restart: always
    ports:
      - 1433:1433
    volumes:
      - Database:/var/opt/mssql
    networks:
      - sql_data
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Pass@word

  applicants.api:
    image: kamy1409/applicants:v1
    restart: always
    ports:
      - 8081:80
    networks:
      - rabbitmq_net
      - sql_data
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - ConnectionString=Server=sql.data;User=sa;Password=Pass@word;Database=dotnetgigs.applicants;
      - HostRabbitmq=rabbitmq

  jobs.api:
    image: kamy1409/jobs:v1
    container_name: service-api-jobs
    restart: always
    ports:
      - 8083:80
    networks:
      - rabbitmq_net
      - sql_data
      - web
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - ConnectionString=Server=sql.data;User=sa;Password=Pass@word;Database=dotnetgigs.jobs;
      - HostRabbitmq=rabbitmq

  identity.api:
    image: kamy1409/identity:v1
    container_name: service-api-identity
    restart: always
    ports:
      - 8084:80
    networks:
      - rabbitmq_net
      - user_data
      - sql_data
      - web
    depends_on:
      rabbitmq:
        condition: service_healthy
      user.data:
        condition: service_started
    environment:
      - RedisHost=user.data:6379
      - HostRabbitmq=rabbitmq

  web:
    build:
      context: ./
      dockerfile: Web/Dockerfile
    restart: always
    ports:
      - 80:80
    depends_on:
      - user.data
      - rabbitmq
      - sql.data
      - applicants.api
      - jobs.api
      - identity.api
    networks:
      - web

volumes:
  Database:



networks:
  user_data:
  rabbitmq_net:
  sql_data:
  web: